name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test -- --run --reporter=verbose
      
    - name: Generate test coverage
      run: npm run test:coverage -- --run --reporter=verbose
      continue-on-error: true
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files-node-${{ matrix.node-version }}
        path: dist/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for common issues
      run: |
        # Check for package vulnerabilities
        npm audit --audit-level=moderate
        
        # Check if package-lock.json is up to date
        npm ci --dry-run
      continue-on-error: true

  test-summary:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()
    
    steps:
    - name: Test Results Summary
      run: |
        echo "## 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ **Tests**: All tests passed successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Tests**: Some tests failed (expected for failing tests)" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.lint.result }}" == "success" ]; then
          echo "✅ **Lint**: No issues found" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ **Lint**: Some issues detected" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 What was tested:" >> $GITHUB_STEP_SUMMARY
        echo "- Unit tests for existing functionality" >> $GITHUB_STEP_SUMMARY
        echo "- Failing tests for future features (expected to fail)" >> $GITHUB_STEP_SUMMARY
        echo "- Application build process" >> $GITHUB_STEP_SUMMARY
        echo "- Package security audit" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Note**: Failing tests are intentional and represent features to be implemented." >> $GITHUB_STEP_SUMMARY
